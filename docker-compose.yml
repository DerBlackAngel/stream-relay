name: stream-relay
services:
  nginx-rtmp:
    image: tiangolo/nginx-rtmp
    container_name: nginx-rtmp
    restart: unless-stopped
    networks: [relay-net]
    depends_on:
      auth-server:
        condition: service_healthy
    ports:
      - "1935:1935"
      - "18080:18080"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-rtmp-html/stat.xsl:/usr/local/nginx/html/stat.xsl:ro

  auth-server:
    build: ./auth-server
    container_name: auth-server
    restart: unless-stopped
    networks: [relay-net]
    env_file: .env
    environment:
      - PORT=3000
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD-SHELL", "node -e \"fetch('http://127.0.0.1:3000/health').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))\""]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 5s

  panel-server:
    build: ./panel-server
    container_name: panel-server
    restart: unless-stopped
    networks: [relay-net]
    env_file: .env
    environment:
      - NODE_ENV=production
      - PORT=4000
      # Optional: Ã¼berschreibbare Stat-URL (intern!)
      - NGINX_STAT_URL=http://nginx-rtmp:18080/stat
    ports:
      - "8080:4000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD-SHELL", "node -e \"fetch('http://127.0.0.1:4000/health').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))\""]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 5s

  ffmpeg-runner:
    image: jrottenberg/ffmpeg:4.4-ubuntu
    container_name: ffmpeg-runner
    restart: unless-stopped
    networks: [relay-net]
    env_file: .env
    depends_on:
      nginx-rtmp:
        condition: service_started
    volumes:
      - ./ffmpeg:/work
    entrypoint: ["/bin/bash","-lc","tail -f /dev/null"]

  ffmpeg-loop:
    image: jrottenberg/ffmpeg:4.4-ubuntu
    container_name: ffmpeg-loop
    restart: unless-stopped
    networks: [relay-net]
    volumes:
      - ./ffmpeg:/work
    entrypoint: ["/bin/bash","-lc","tail -f /dev/null"]

  stream-guard:
    build: ./stream-guard
    container_name: stream-guard
    restart: unless-stopped
    networks: [relay-net]
    depends_on:
      - nginx-rtmp
      - auth-server
      - panel-server

networks:
  relay-net:
    driver: bridge
